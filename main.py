import sqlite3
import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command, CommandStart
from aiogram.types import WebAppInfo

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "7830618724:AAFMhiP-DOV8fAs64Ecm3TUF-Xb-0zexJZI"

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏
conn = sqlite3.connect("messages.db", check_same_thread=False)
cursor = conn.cursor()
cursor.execute("""
CREATE TABLE IF NOT EXISTS messages (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    text TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)
""")
conn.commit()

# –î–æ–º–µ–Ω –¥–ª—è WebApp
# –í–ê–ñ–õ–ò–í–û: –ó–º—ñ–Ω—ñ—Ç—å —Ü–µ–π URL –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω–∏–π HTTPS-–¥–æ–º–µ–Ω
WEBAPP_URL = "https://your-domain.com"  # –ó–º—ñ–Ω—ñ—Ç—å –Ω–∞ –∞–¥—Ä–µ—Å—É –≤–∞—à–æ–≥–æ —Ö–æ—Å—Ç–∏–Ω–≥—É

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()


# === –û–ë–†–û–ë–ù–ò–ö–ò –ë–û–¢–ê ===

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(CommandStart())
async def command_start(message: Message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start"""
    logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –∫–æ–º–∞–Ω–¥—É /start –≤—ñ–¥ {message.from_user.id}")
    await message.answer(
        "üëã –í—ñ—Ç–∞—é! –ù–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ –∞–Ω–æ–Ω—ñ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —ñ —è –∑–±–µ—Ä–µ–∂—É –π–æ–≥–æ.\n\n–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /read —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.")


# –ö–æ–º–∞–Ω–¥–∞ /read
@dp.message(Command("read"))
async def command_read(message: Message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /read"""
    logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –∫–æ–º–∞–Ω–¥—É /read –≤—ñ–¥ {message.from_user.id}")

    try:
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üìñ –í—ñ–¥–∫—Ä–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è", web_app=WebAppInfo(url=WEBAPP_URL))]
            ]
        )

        await message.answer("üì© –û—Å—å –≤–∞—à—ñ –∞–Ω–æ–Ω—ñ–º–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", reply_markup=keyboard)
        logger.info("–ö–Ω–æ–ø–∫–∞ WebApp –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∫–æ–º–∞–Ω–¥–∏ /read: {e}")
        await message.answer(f"–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {e}")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–≤–∏—á–∞–π–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–Ω–µ –∫–æ–º–∞–Ω–¥)
@dp.message()
async def save_message(message: Message):
    """–ó–±–µ—Ä—ñ–≥–∞—î –∞–Ω–æ–Ω—ñ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –±–∞–∑—É"""
    try:
        logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {message.from_user.id}: {message.text[:20]}...")
        cursor.execute("INSERT INTO messages (text) VALUES (?)", (message.text,))
        conn.commit()
        await message.answer("‚úÖ –í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ –∞–Ω–æ–Ω—ñ–º–Ω–æ.")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        await message.answer("‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.")


async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logger.info("–ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞...")
    try:
        await dp.start_polling(bot)
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: {e}")


if __name__ == "__main__":
    asyncio.run(main())